import{_ as t,c as e,o as c,ag as l}from"./chunks/framework.CO45oJKY.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/common-collections/common-collections.md","filePath":"docs/common-collections/common-collections.md","lastUpdated":1754575581000}'),a={name:"docs/common-collections/common-collections.md"};function n(s,o,r,i,m,d){return c(),e("div",null,o[0]||(o[0]=[l('<h2 id="常用集合" tabindex="-1">常用集合 <a class="header-anchor" href="#常用集合" aria-label="Permalink to &quot;常用集合&quot;">​</a></h2><p>Rust 的标准库包含许多非常有用的数据结构，称为集合。大多数其他数据类型表示一个特定的值，但集合可以包含多个值。与内置的数组和元组类型不同，这些集合指向的数据存储在堆上，这意味着数据量不需要在编译时知道，并且可以随着程序运行而增长或缩小。每种集合都有不同的能力和成本，为当前情况选择合适的集合是一项需要时间培养的技能。在本章中，我们将讨论 Rust 程序中经常使用的三种集合：</p><ul><li>向量(Vector)允许你存储可变数量的相邻值</li><li>字符串(String)是字符的集合。我们之前提到过 String 类型，但在本章中我们将深入讨论它</li><li>哈希映射(Hash Map)允许你将值与特定键关联。它是更通用的映射数据结构的一种特定实现</li></ul><p>要了解标准库提供的其他类型的集合，请参阅<a href="https://doc.rust-lang.org/std/collections/index.html" target="_blank" rel="noreferrer">官方文档</a>。</p><p>我们将讨论如何创建和更新向量、字符串和哈希映射，以及它们各自的特点。</p>',5)]))}const u=t(a,[["render",n]]);export{p as __pageData,u as default};
