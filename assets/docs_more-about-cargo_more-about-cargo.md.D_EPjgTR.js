import{_ as a,c as e,o,ag as t}from"./chunks/framework.CO45oJKY.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/more-about-cargo/more-about-cargo.md","filePath":"docs/more-about-cargo/more-about-cargo.md","lastUpdated":1754575581000}'),s={name:"docs/more-about-cargo/more-about-cargo.md"};function c(i,r,l,n,_,g){return o(),e("div",null,r[0]||(r[0]=[t('<h2 id="关于-cargo-和-crates-io-的更多信息" tabindex="-1">关于 Cargo 和 Crates.io 的更多信息 <a class="header-anchor" href="#关于-cargo-和-crates-io-的更多信息" aria-label="Permalink to &quot;关于 Cargo 和 Crates.io 的更多信息&quot;">​</a></h2><p>到目前为止，我们只使用了 Cargo 最基本的功能来构建、运行和测试我们的代码，但它能做的远不止这些。在本章中，我们将讨论它的一些其他更高级的功能，向你展示如何执行以下操作：</p><ul><li>通过发布配置文件自定义构建</li><li>在 <a href="https://crates.io/" target="_blank" rel="noreferrer">crates.io</a> 上发布库</li><li>使用工作区组织大型项目</li><li>从 <a href="https://crates.io/" target="_blank" rel="noreferrer">crates.io</a> 安装二进制文件</li><li>使用自定义命令扩展 Cargo</li></ul><p>Cargo 的功能远不止本章介绍的这些，有关其所有功能的完整说明，请参阅<a href="https://doc.rust-lang.org/cargo/" target="_blank" rel="noreferrer">其文档</a>。</p>',4)]))}const m=a(s,[["render",c]]);export{p as __pageData,m as default};
