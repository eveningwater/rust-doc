(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{404:function(t,s,a){"use strict";a.r(s);var r=a(18),n=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"附录-d-实用开发工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附录-d-实用开发工具"}},[t._v("#")]),t._v(" 附录 D - 实用开发工具")]),t._v(" "),s("p",[t._v("在本附录中，我们会讨论 Rust 项目提供的一些实用开发工具。我们将研究自动格式化、快速应用警告修复的方法、代码检查器以及与 IDE 的集成。")]),t._v(" "),s("h3",{attrs:{id:"使用-rustfmt-进行自动格式化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-rustfmt-进行自动格式化"}},[t._v("#")]),t._v(" 使用 "),s("code",[t._v("rustfmt")]),t._v(" 进行自动格式化")]),t._v(" "),s("p",[s("code",[t._v("rustfmt")]),t._v(" 工具根据社区代码风格重新格式化你的代码。许多协作项目使用 "),s("code",[t._v("rustfmt")]),t._v(" 来防止在编写 Rust 代码时关于使用哪种风格的争论：每个人都使用该工具格式化他们的代码。")]),t._v(" "),s("p",[t._v("Rust 安装默认包含 "),s("code",[t._v("rustfmt")]),t._v("，所以你的系统上应该已经有了程序 "),s("code",[t._v("rustfmt")]),t._v(" 和 "),s("code",[t._v("cargo-fmt")]),t._v("。这两个命令类似于 "),s("code",[t._v("rustc")]),t._v(" 和 "),s("code",[t._v("cargo")]),t._v("，其中 "),s("code",[t._v("rustfmt")]),t._v(" 允许更细粒度的控制，而 "),s("code",[t._v("cargo-fmt")]),t._v(" 理解使用 Cargo 的项目的约定。要格式化任何 Cargo 项目，请输入以下内容：")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("$ cargo fmt\n")])])]),s("p",[t._v("运行此命令会重新格式化当前 "),s("code",[t._v("crate")]),t._v(" 中的所有 Rust 代码。这应该只改变代码风格，而不是代码语义。")]),t._v(" "),s("p",[t._v("此命令为你提供 "),s("code",[t._v("rustfmt")]),t._v(" 和 "),s("code",[t._v("cargo-fmt")]),t._v("，类似于 Rust 为你提供 "),s("code",[t._v("rustc")]),t._v(" 和 "),s("code",[t._v("cargo")]),t._v("。要格式化任何 Cargo 项目，请输入以下内容：")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("$ cargo fmt\n")])])]),s("p",[t._v("运行此命令会重新格式化当前 "),s("code",[t._v("crate")]),t._v(" 中的所有 Rust 代码。这应该只改变代码风格，而不是代码语义。有关 "),s("code",[t._v("rustfmt")]),t._v(" 的更多信息，请参阅"),s("a",{attrs:{href:"https://github.com/rust-lang/rustfmt",target:"_blank",rel:"noopener noreferrer"}},[t._v("其文档"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"使用-rustfix-修复你的代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-rustfix-修复你的代码"}},[t._v("#")]),t._v(" 使用 "),s("code",[t._v("rustfix")]),t._v(" 修复你的代码")]),t._v(" "),s("p",[s("code",[t._v("rustfix")]),t._v(" 工具包含在 Rust 安装中，可以自动修复具有明确纠正问题方法的编译器警告，这很可能是你想要的。你之前很可能见过编译器警告。例如，考虑这段代码：")]),t._v(" "),s("p",[t._v("文件名：src/main.rs：")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("println!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{x}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在这里，我们将变量 "),s("code",[t._v("x")]),t._v(" 定义为可变的，但我们从未真正改变它。Rust 会对此发出警告：")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("$ cargo build\n   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Compiling")]),t._v(" myprogram v0"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//projects/myprogram)")]),t._v("\nwarning"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" variable does not need to be mutable\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("         help"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" remove this `"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v("`\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" note"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" `"),s("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[warn(unused_mut)]")]),t._v("` on by default\n")])])]),s("p",[t._v("警告建议我们删除 "),s("code",[t._v("mut")]),t._v(" 关键字。我们可以通过运行命令 "),s("code",[t._v("cargo fix")]),t._v(" 使用 "),s("code",[t._v("rustfix")]),t._v(" 工具自动应用该建议：")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("$ cargo fix\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Checking")]),t._v(" myprogram v0"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//projects/myprogram)")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fixing")]),t._v(" src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" fix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Finished")]),t._v(" dev "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("unoptimized "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" debuginfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("59s\n")])])]),s("p",[t._v("当我们再次查看 "),s("em",[t._v("src/main.rs")]),t._v(" 时，我们会看到 "),s("code",[t._v("cargo fix")]),t._v(" 已经更改了代码：")]),t._v(" "),s("p",[t._v("文件名：src/main.rs：")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("println!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{x}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("x")]),t._v(" 变量现在是不可变的，警告不再出现。")]),t._v(" "),s("p",[t._v("你还可以使用 "),s("code",[t._v("cargo fix")]),t._v(" 命令在不同的 Rust 版本之间转换你的代码。版本在"),s("RouterLink",{attrs:{to:"/doc/appendix/appendix-e.html"}},[t._v("附录 E")]),t._v("中有介绍。")],1),t._v(" "),s("h3",{attrs:{id:"使用-clippy-进行更多代码检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-clippy-进行更多代码检查"}},[t._v("#")]),t._v(" 使用 Clippy 进行更多代码检查")]),t._v(" "),s("p",[t._v("Clippy 工具是一个代码检查集合，用于分析你的代码，以便你可以捕获常见错误并改进你的 Rust 代码。Clippy 包含在标准 Rust 安装中。")]),t._v(" "),s("p",[t._v("要在任何 Cargo 项目上运行 Clippy 的代码检查，请输入以下内容：")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("$ cargo clippy\n")])])]),s("p",[t._v("例如，假设你编写了一个使用数学常数近似值的程序，比如 pi，就像这个程序所做的那样：")]),t._v(" "),s("p",[t._v("文件名：src/main.rs：")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1415")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("println!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the area of the circle is {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在此项目上运行 "),s("code",[t._v("cargo clippy")]),t._v(" 会导致此错误：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("error: approximate value of `f{32, 64}::consts::PI` found\n --\x3e src/main.rs:2:13\n  |\n2 |     let x = 3.1415;\n  |             ^^^^^^\n  |\n  = note: `#[deny(clippy::approx_constant)]` on by default\n  = help: consider using the constant directly\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant\n")])])]),s("p",[t._v("此错误让你知道 Rust 已经定义了更精确的 "),s("code",[t._v("PI")]),t._v(" 常数，如果你使用该常数，你的程序会更正确。然后你会更改你的代码以使用 "),s("code",[t._v("PI")]),t._v(" 常数。以下代码不会从 Clippy 产生任何错误或警告：")]),t._v(" "),s("p",[t._v("文件名：src/main.rs：")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("f64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("consts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("println!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the area of the circle is {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("有关 Clippy 的更多信息，请参阅"),s("a",{attrs:{href:"https://github.com/rust-lang/rust-clippy",target:"_blank",rel:"noopener noreferrer"}},[t._v("其文档"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"使用-rust-analyzer-进行-ide-集成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-rust-analyzer-进行-ide-集成"}},[t._v("#")]),t._v(" 使用 "),s("code",[t._v("rust-analyzer")]),t._v(" 进行 IDE 集成")]),t._v(" "),s("p",[t._v("为了帮助 IDE 集成，Rust 社区推荐使用 "),s("a",{attrs:{href:"https://rust-analyzer.github.io",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("rust-analyzer")]),s("OutboundLink")],1),t._v("。此工具是一套以编译器为中心的实用程序，它使用"),s("a",{attrs:{href:"http://langserver.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("语言服务器协议"),s("OutboundLink")],1),t._v("，这是 IDE 和编程语言之间相互通信的规范。不同的客户端可以使用 "),s("code",[t._v("rust-analyzer")]),t._v("，比如 "),s("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer",target:"_blank",rel:"noopener noreferrer"}},[t._v("Visual Studio Code 的 Rust analyzer 插件"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("访问 "),s("code",[t._v("rust-analyzer")]),t._v(" 项目的"),s("a",{attrs:{href:"https://rust-analyzer.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("主页"),s("OutboundLink")],1),t._v("获取安装说明，然后在你的特定 IDE 中安装语言服务器支持。你的 IDE 将获得诸如自动完成、跳转到定义和内联错误等功能。")])])}),[],!1,null,null,null);s.default=n.exports}}]);