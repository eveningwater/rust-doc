(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{449:function(e,t,a){"use strict";a.r(t);var s=a(18),n=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"使用发布配置文件自定义构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用发布配置文件自定义构建"}},[e._v("#")]),e._v(" 使用发布配置文件自定义构建")]),e._v(" "),t("p",[e._v("在 Rust 中，发布配置文件是预定义的可自定义配置文件，具有不同的配置，允许程序员更好地控制各种代码编译选项。每个配置文件都独立于其他配置文件进行配置。")]),e._v(" "),t("p",[e._v("Cargo 有两个主要配置文件：运行 "),t("code",[e._v("cargo build")]),e._v(" 时使用的 "),t("code",[e._v("dev")]),e._v(" 配置文件和运行 "),t("code",[e._v("cargo build --release")]),e._v(" 时使用的 "),t("code",[e._v("release")]),e._v(" 配置文件。"),t("code",[e._v("dev")]),e._v(" 配置文件定义了适合开发的良好默认值，而 "),t("code",[e._v("release")]),e._v(" 配置文件定义了适合发布构建的良好默认值。")]),e._v(" "),t("p",[e._v("这些配置文件名称可能在您的构建输出中很熟悉：")]),e._v(" "),t("div",{staticClass:"language-rust extra-class"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[e._v("$ cargo build\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Finished")]),e._v(" `dev` profile "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("unoptimized "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" debuginfo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("target")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("00s\n$ cargo build "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("release\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Finished")]),e._v(" `release` profile "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("optimized"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("target")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("32s\n")])])]),t("p",[t("code",[e._v("dev")]),e._v(" 和 "),t("code",[e._v("release")]),e._v(" 是编译器使用的不同配置文件。")]),e._v(" "),t("p",[e._v("当您未在项目的 Cargo.toml 文件中明确添加任何 "),t("code",[e._v("[profile.*]")]),e._v(" 部分时，Cargo 会为每个配置文件应用默认设置。通过为要自定义的任何配置文件添加 "),t("code",[e._v("[profile.*]")]),e._v(" 部分，您可以覆盖默认设置的任何子集。例如，以下是 "),t("code",[e._v("dev")]),e._v(" 和 "),t("code",[e._v("release")]),e._v(" 配置文件的 "),t("code",[e._v("opt-level")]),e._v(" 设置的默认值：")]),e._v(" "),t("p",[e._v("Filename: Cargo.toml:")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("profile.dev")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("opt-level")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("profile.release")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("opt-level")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n")])])]),t("p",[t("code",[e._v("opt-level")]),e._v(" 设置控制 Rust 将应用于代码的优化级别，范围为 0 到 3。应用更多优化会延长编译时间，因此如果您正在开发并经常编译代码，您会希望减少优化以加快编译速度，即使生成的代码运行速度较慢。因此，"),t("code",[e._v("dev")]),e._v(" 的默认 "),t("code",[e._v("opt-level")]),e._v(" 为 "),t("code",[e._v("0")]),e._v("。当您准备发布代码时，最好花更多时间进行编译。您只需在发布模式下编译一次，但会多次运行编译后的程序，因此发布模式以更长的编译时间换取更快的代码运行速度。这就是 "),t("code",[e._v("release")]),e._v(" 配置文件的默认 "),t("code",[e._v("opt-level")]),e._v(" 为 "),t("code",[e._v("3")]),e._v(" 的原因。")]),e._v(" "),t("p",[e._v("您可以通过在 Cargo.toml 中为其添加不同的值来覆盖默认设置。例如，如果要在开发配置文件中使用优化级别 1，可以将以下两行添加到项目的 Cargo.toml 文件中：")]),e._v(" "),t("p",[e._v("Filename: Cargo.toml:")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("profile.dev")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("opt-level")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])])]),t("p",[e._v("此代码覆盖了默认设置 "),t("code",[e._v("0")]),e._v("。现在，当我们运行 "),t("code",[e._v("cargo build")]),e._v(" 时，Cargo 将使用 "),t("code",[e._v("dev")]),e._v(" 配置文件的默认设置以及我们对 "),t("code",[e._v("opt-level")]),e._v(" 的自定义设置。由于我们将 "),t("code",[e._v("opt-level")]),e._v(" 设置为 "),t("code",[e._v("1")]),e._v("，Cargo 将应用比默认设置更多的优化，但不如发布构建中的优化多。")]),e._v(" "),t("p",[e._v("有关每个配置文件的完整配置选项和默认值列表，请参阅"),t("a",{attrs:{href:"https://doc.rust-lang.org/cargo/reference/profiles.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cargo 的文档"),t("OutboundLink")],1),e._v("。")])])}),[],!1,null,null,null);t.default=n.exports}}]);