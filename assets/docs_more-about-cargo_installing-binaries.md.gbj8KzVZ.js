import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.CO45oJKY.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/more-about-cargo/installing-binaries.md","filePath":"docs/more-about-cargo/installing-binaries.md","lastUpdated":1754912302000}'),l={name:"docs/more-about-cargo/installing-binaries.md"};function e(p,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h2 id="使用-cargo-install-安装二进制文件" tabindex="-1">使用 <code>cargo install</code> 安装二进制文件 <a class="header-anchor" href="#使用-cargo-install-安装二进制文件" aria-label="Permalink to &quot;使用 \`cargo install\` 安装二进制文件&quot;">​</a></h2><p><code>cargo install</code> 命令允许你在本地安装和使用二进制 crate。这并不是为了替代系统包管理器，而是为 Rust 开发者提供一种便捷的方式来安装其他人在 <a href="https://crates.io/" target="_blank" rel="noreferrer">crates.io</a> 上分享的工具。请注意，你只能安装具有二进制目标的包。二进制目标是指当 crate 有 src/main.rs 文件或者另一个指定为二进制文件的文件时创建的可运行程序，这与不能独立运行但适合包含在其他程序中的库目标不同。通常，crate 在 README 文件中会有信息说明该 crate 是库、二进制目标，或者两者都是。</p><p>所有通过 <code>cargo install</code> 安装的二进制文件都存储在安装根目录的 bin 文件夹中。如果你使用 rustup.rs 安装了 Rust 且没有任何自定义配置，这个目录将是 <code>$HOME/.cargo/bin</code>。确保该目录在你的 <code>$PATH</code> 中，这样你才能运行通过 <code>cargo install</code> 安装的程序。</p><p>例如，在第 12 章中我们提到了一个用于搜索文件的 <code>grep</code> 工具的 Rust 实现，叫做 <code>ripgrep</code>。要安装 <code>ripgrep</code>，我们可以运行以下命令：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cargo install ripgrep</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Updating</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crates</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">io index</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Downloaded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ripgrep v14</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Downloaded</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> crate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">213.6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> KB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">40s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Installing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ripgrep v14</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">snip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   Compiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grep v0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Finished</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \`release\` profile [optimized </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debuginfo] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">73s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Installing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cargo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rg</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   Installed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> package \`ripgrep v14</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\` (executable \`rg\`)</span></span></code></pre></div><p>输出的倒数第二行显示了已安装二进制文件的位置和名称，在 <code>ripgrep</code> 的情况下是 <code>rg</code>。只要安装目录在你的 <code>$PATH</code> 中，如前所述，你就可以运行 <code>rg --help</code> 并开始使用这个更快、更 Rust 化的文件搜索工具！</p>`,6)]))}const c=i(l,[["render",e]]);export{o as __pageData,c as default};
