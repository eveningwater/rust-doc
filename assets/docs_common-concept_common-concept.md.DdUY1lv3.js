import{_ as e,c as t,o as c,ag as a}from"./chunks/framework.CO45oJKY.js";const l=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/common-concept/common-concept.md","filePath":"docs/common-concept/common-concept.md","lastUpdated":1754619663000}'),n={name:"docs/common-concept/common-concept.md"};function s(d,o,p,m,r,_){return c(),t("div",null,o[0]||(o[0]=[a('<h2 id="常用的编程概念" tabindex="-1">常用的编程概念 <a class="header-anchor" href="#常用的编程概念" aria-label="Permalink to &quot;常用的编程概念&quot;">​</a></h2><p>本章涵盖了几乎每种编程语言中出现的概念以及它们在<code>Rust</code>中的工作方式。 许多编程语言的核心都有很多共同点。 本章中介绍的概念都不是 Rust 独有的，但我们将在 Rust 的背景下进行讨论，并解释有关使用这些概念的约定。</p><p>具体来说，你将了解变量，基本类型，函数，注释和控制流。这些基础将存在于每个<code>Rust</code>程序中，并且尽早学习它们将为你提供强大的起点。</p><blockquote><p>与其他语言一样，<code>Rust</code>语言具有一组仅保留给该语言使用的关键字。请记住，你不能将这些单词用作变量或函数的名称。 大多数关键字具有特殊含义，你将使用它们在 Rust 程序中执行各种任务； 有一些没有与之关联的当前功能，但已保留用于将来可能会添加到<code>Rust</code>的功能。你可以在<a href="./../appendix/appendix-a.html">附录 A</a>中找到关键字列表。</p></blockquote>',4)]))}const u=e(n,[["render",s]]);export{l as __pageData,u as default};
